package com.model.pojo;
// Generated Sep 24, 2024 1:32:00 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="flow_manage"
)
public class User  implements java.io.Serializable {


     private Integer id;
     private String firstName;
     private String lastName;
     private String email;
     private String password;
     private Set<Task> tasks = new HashSet<Task>(0);
     private Set<Project> projects = new HashSet<Project>(0);
     private Set<User> contacts = new HashSet<User>(0);

    public User() {
    }

	
    public User(String firstName, String email, String password) {
        this.firstName = firstName;
        this.email = email;
        this.password = password;
    }
    public User(String firstName, String lastName, String email, String password) {
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.password = password;
    }
    public User(String firstName, String lastName, String email, String password, Set<Task> tasks, Set<Project> projects) {
       this.firstName = firstName;
       this.lastName = lastName;
       this.email = email;
       this.password = password;
       this.tasks = tasks;
       this.projects = projects;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    public String getFullName() {
        if (this.lastName == null) {
            return this.firstName;
        }
        
        return this.firstName + " " + this.lastName;
    }
    
    @Column(name="first_name", nullable=false, length=50)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name", length=50)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="email", nullable=false, length=100)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="password", nullable=false, length=60)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

@ManyToMany(fetch=FetchType.LAZY, targetEntity = Task.class)
    @JoinTable(name="task_worker", catalog="flow_manage", joinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="task_id", nullable=false, updatable=false) })
    public Set<Task> getTasks() {
        return this.tasks;
    }
    
    public void setTasks(Set<Task> tasks) {
        this.tasks = tasks;
    }

@ManyToMany(fetch=FetchType.LAZY, targetEntity = Project.class)
    @JoinTable(name="project_worker", catalog="flow_manage", joinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="project_id", nullable=false, updatable=false) })
    public Set<Project> getProjects() {
        return this.projects;
    }
    
    @ManyToMany(fetch=FetchType.LAZY, targetEntity = User.class)
    @JoinTable(name="contact", catalog="flow_manage", joinColumns={
        @JoinColumn(name="user_id_a", nullable=false, updatable=false)
    }, inverseJoinColumns = {
        @JoinColumn(name="user_id_b", nullable=false, updatable=false)
    })
    public Set<User> getContacts() {
        return this.contacts;
    }
    
    public void setContacts(Set<User> contacts) {
        this.contacts = contacts;
    }
    
    
    public void setProjects(Set<Project> projects) {
        this.projects = projects;
    }




}


