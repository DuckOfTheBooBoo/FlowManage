package com.model.pojo;
// Generated Sep 24, 2024 1:32:00 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name="task"
    ,catalog="flow_manage"
)
public class Task  implements java.io.Serializable {


     private Integer id;
     private Project project;
     private Status status;
     private String title;
     private int priority;
     private Date deadline;
     private Set<User> users = new HashSet<User>(0);

    public Task() {
    }

	
    public Task(Project project, Status status, String title, int priority, Date deadline) {
        this.project = project;
        this.status = status;
        this.title = title;
        this.priority = priority;
        this.deadline = deadline;
    }
    public Task(Project project, Status status, String title, int priority, Date deadline, Set<User> users) {
       this.project = project;
       this.status = status;
       this.title = title;
       this.priority = priority;
       this.deadline = deadline;
       this.users = users;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity = Project.class)
    @JoinColumn(name="project_id", nullable=false)
    public Project getProject() {
        return this.project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity = Status.class)
    @JoinColumn(name="status_id", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="title", nullable=false)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    
    @Column(name="priority", nullable=false)
    public int getPriority() {
        return this.priority;
    }
    
    public void setPriority(int priority) {
        this.priority = priority;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="deadline", nullable=false, length=10)
    public Date getDeadline() {
        return this.deadline;
    }
    
    public void setDeadline(Date deadline) {
        this.deadline = deadline;
    }

@ManyToMany(fetch=FetchType.LAZY, targetEntity = User.class)
    @JoinTable(name="task_worker", catalog="flow_manage", joinColumns = { 
        @JoinColumn(name="task_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }




}


